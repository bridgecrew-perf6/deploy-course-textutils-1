{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","style","width","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","placeholder","onClick","toggleMode","htmlFor","TextForm","prop","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","color","_useState4","initialColor","setColor","Fragment","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","newLoText","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","height","borderStyle","marginTop","display","flexDirection","flexWrap","margin","backgroundColor","body","split","filter","element","length","About","myStyle","aria-labelledby","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setDarkMode","setAlert","message","setTimeout","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.14e4af0f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types' \r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n    <div className=\"container-fluid\" style={{width:\"100%\"}}>\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?\"dark\":\"light\"}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`enable ${props.mode==='light'?\"dark\":\"light\"} mode`}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired, // means title must be string \r\n    aboutText:PropTypes.string.isRequired,  // means aboutText must be string\r\n}\r\n \r\nNavbar.defaultProps={\r\n    title:\"website title\", // if we not give any value in title then this title value works\r\n    aboutText:\"about Section\", // if we not give any value in about then this title value works\r\n}\r\n","// understanding state and handling events \r\nimport React,{useState} from 'react'\r\n\r\nexport default function TextForm(prop) {\r\n  //  how to use style tag in components \r\n\r\n\r\n  const allColorsStyle={\r\n    height:\"100px\",\r\n    width:\"300px\",\r\n    borderStyle:\"solid\",\r\n    marginTop:\"10px\",\r\n    display:\"flex\",\r\n    flexDirection:\"wrap\",\r\n    flexWrap:\"wrap\"\r\n  }  \r\n  // colors css \r\n  const colorred={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"red\"}\r\n  const colorgreen={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"green\"}\r\n  const colorblue={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"blue\"}\r\n  const colororange={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"orange\"}\r\n  const colorpink={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"pink\"}\r\n  const colorgrey={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"grey\"}\r\n  const coloryellow={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"yellow\"}\r\n  const colorbrown={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"brown\"}\r\n  const colorgold={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"gold\"}\r\n  const colorviolet={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"violet\"}\r\n  const colorslateblue={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"slateblue\"}\r\n  const colorindigo={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"indigo\"}\r\n  const colorlime={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"lime\"}\r\n  const colorseagreen={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"seagreen\"}\r\n  const colorolive={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"olive\"}\r\n  const colorteal={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"steal\"}\r\n  const colorskyblue={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"skyblue\"}\r\n  const colorchocolate={height:\"20px\",width:\"20px\",margin:\"5px\",backgroundColor:\"chocolate\"}\r\n  // // colors functions \r\n  const colorredfun=()=>{\r\n    console.log(\"red color\")\r\n    setColor({\r\n      color:\"green\"\r\n    })\r\n  }\r\n  const colorgreenfun=()=>{\r\n    console.log(\"green\")\r\n    setColor({\r\n      color:\"green\"\r\n    })\r\n  }\r\n  const colorbluefun=()=>{\r\n    console.log(\"blue\")\r\n    setColor({\r\n      color:\"blue\"\r\n    })\r\n  }\r\n  const colororangefun=()=>{\r\n    console.log(\"orange\")\r\n    setColor({\r\n      color:\"orange\"\r\n    })\r\n  }\r\n  const colorpinkfun=()=>{\r\n    console.log(\"pink\")\r\n    setColor({\r\n      color:\"pink\"\r\n    })\r\n  }\r\n  const colorgreyfun=()=>{\r\n    console.log(\"grey\")\r\n    setColor({\r\n      color:\"grey\"\r\n    })\r\n  }\r\n  const coloryellowfun=()=>{\r\n    console.log(\"yellow\")\r\n    setColor({\r\n      color:\"yellow\"\r\n    })\r\n  }\r\n  const colorbrownfun=()=>{\r\n    console.log(\"brown\")\r\n    setColor({\r\n      color:\"brown\"\r\n    })\r\n  }\r\n  const colorgoldfun=()=>{\r\n    console.log(\"gold\")\r\n    setColor({\r\n      color:\"gold\"\r\n    })\r\n  }\r\n  const colorvioletfun=()=>{\r\n    console.log(\"violet\")\r\n    setColor({\r\n      color:\"violet\"\r\n    })\r\n  }\r\n  const colorslatebluefun=()=>{\r\n    console.log(\"slateblue\")\r\n    setColor({\r\n      color:\"slateblue\"\r\n    })\r\n  }\r\n  const colorindigofun=()=>{\r\n    console.log(\"indigo\")\r\n    setColor({\r\n      color:\"indigo\"\r\n    })\r\n  }\r\n  const colorlimefun=()=>{\r\n    console.log(\"lime\")\r\n    setColor({\r\n      color:\"lime\"\r\n    })\r\n  }\r\n  const colorseagreenfun=()=>{\r\n    console.log(\"seagreen\")\r\n    setColor({\r\n      color:\"seagreen\"\r\n    })\r\n  }\r\n  const colorolivefun=()=>{\r\n    console.log(\"olive\")\r\n    setColor({\r\n      color:\"olive\"\r\n    })\r\n  }\r\n  const colortealfun=()=>{\r\n    console.log(\"steal\")\r\n    setColor({\r\n      color:\"teal\"\r\n    })\r\n  }\r\n  const colorskybluefun=()=>{\r\n    console.log(\"skyblue\")\r\n    setColor({\r\n      color:\"skyblue\"\r\n    })\r\n  }\r\n  const colorchocolatefun=()=>{\r\n    console.log(\"chocolate\")\r\n    setColor({\r\n      color:\"chocolate\"\r\n    })\r\n  }\r\n  const backgroundbluefun=()=>{\r\n    document.body.style.backgroundColor=\"blue\"\r\n  }\r\n  const backgroundgreenfun=()=>{\r\n    document.body.style.backgroundColor=\"green\"\r\n  }\r\n  const backgroundredfun=()=>{\r\n    document.body.style.backgroundColor=\"red\"\r\n  }\r\n\r\n  const handleUpClick=()=>{\r\n    console.log(\"upper case was clicked\"+text)\r\n    let newText=text.toUpperCase();\r\n    setText(newText)\r\n    prop.showAlert(\"converted to uppercase!\",\"success\");\r\n  }\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"onchange\") \r\n    setText(event.target.value)\r\n  }\r\n  const handleLoClick=()=>{\r\n    let newLoText=text.toLowerCase();\r\n    setText(newLoText);\r\n    prop.showAlert(\"converted to lowercase!\",\"success\");\r\n  }\r\n  const handleClearClick=()=>{\r\n    setText(\" \");\r\n    prop.showAlert(\"text cleared successfully!\",\"success\");\r\n  }\r\n  const handleCopy=()=>{\r\n    let textarea=document.getElementById(\"myBox\");\r\n    textarea.select();\r\n    navigator.clipboard.writeText(text);\r\n    prop.showAlert(\"text copied successfully!\",\"success\");\r\n  }\r\n  const [text,setText]=useState(\"Enter text here\")\r\n  const [initialColor,setColor]=useState({\r\n     color:\"black\"\r\n  })\r\n  return (\r\n    <>\r\n     <div className=\"container\">\r\n       <h1>{prop.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className={`form-control bg-${prop.mode===\"light\"?\"light\":\"secondary\"}`} value={text} style={initialColor} onChange={handleOnChange} id=\"myBox\" rows=\"15\" ></textarea>\r\n        </div>      \r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleClearClick}>Clear</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy text</button>\r\n        <button className=\"btn btn-primary mx-3\">Remove Extra spaces</button>\r\n        <button className=\"btn btn-primary mx-3\">download as txt file</button>\r\n        <div>\r\n          <h3>text color</h3>\r\n        <div className=\"allColors\" style={allColorsStyle}>\r\n            <div className=\"colorred\"        onClick={colorredfun} style={colorred}></div>\r\n            <div className=\"colorgreen\"      onClick={colorgreenfun}   style={colorgreen}></div>\r\n            <div className=\"colorblue\"       onClick={colorbluefun}   style={colorblue}></div>\r\n            <div className=\"colororange\"     onClick={colororangefun}   style={colororange}></div>\r\n            <div className=\"colorpink\"       onClick={colorpinkfun}   style={colorpink}></div>\r\n            <div className=\"coloryellow\"     onClick={coloryellowfun}   style={coloryellow}></div>\r\n            <div className=\"colorbrown\"      onClick={colorbrownfun}   style={colorbrown}></div>\r\n            <div className=\"colorgold\"       onClick={colorgoldfun}   style={colorgold}></div>\r\n            <div className=\"colorviolet\"     onClick={colorvioletfun}   style={colorviolet}></div>\r\n            <div className=\"colorslateblue\"  onClick={colorslatebluefun}   style={colorslateblue}></div>\r\n            <div className=\"colorindigo\"     onClick={colorindigofun}   style={colorindigo}></div>\r\n            <div className=\"colorgrey\"       onClick={colorgreyfun}   style={colorgrey}></div>\r\n            <div className=\"colorlime\"       onClick={colorlimefun}   style={colorlime}></div>\r\n            <div className=\"colorseagreen\"   onClick={colorseagreenfun}   style={colorseagreen}></div>\r\n            <div className=\"colorolive\"      onClick={colorolivefun}   style={colorolive}></div>\r\n            <div className=\"colorteal\"       onClick={colortealfun}   style={colorteal}></div>\r\n            <div className=\"colorskyblue\"    onClick={colorskybluefun}   style={colorskyblue}></div>\r\n            <div className=\"colorchocolate\"    onClick={colorchocolatefun}   style={colorchocolate}></div>\r\n        </div>\r\n        </div>          \r\n        <div>\r\n          <h3>select background color :</h3>\r\n          <div className=\"backgroundColors\" style={{height:\"40px\",width:\"100px\",borderStyle:\"solid\",display:\"flex\",flexDirection:\"wrap\",flexWrap:\"wrap\"}}>\r\n              <div className=\"backgroundcolor1\" style={{height:\"20px\",width:\"20px\",borderStyle:\"solid\",backgroundColor:\"blue\",margin:\"5px\"}}  onClick={backgroundbluefun}></div>\r\n              <div className=\"backgroundcolor1\" style={{height:\"20px\",width:\"20px\",borderStyle:\"solid\",backgroundColor:\"green\",margin:\"5px\"}} onClick={backgroundgreenfun}></div>\r\n              <div className=\"backgroundcolor1\" style={{height:\"20px\",width:\"20px\",borderStyle:\"solid\",backgroundColor:\"red\",margin:\"5px\"}}  onClick={backgroundredfun}></div>\r\n          </div>\r\n        </div>\r\n     </div>  \r\n     <div className=\"container my-3\">\r\n         <h1>Your Text Summary</h1>\r\n         <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n         <p>{0.008*(text.split(\" \").filter((element)=>{return element.length!==0}).length)}minutes to read</p>\r\n         <h1>preview</h1>\r\n         <p>{text.length>0?text:\"enter some text pls :\"}</p>\r\n\r\n     </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nexport default function About(props) {\r\n    let myStyle={\r\n        color:(props.mode===\"dark\")?\"white\":\"black\",\r\n        backgroundColor:(props.mode===\"dark\")?\"transparent\":\"white\"\r\n    }\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1>About us</h1>\r\n            <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\" style={myStyle}>\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\" >\r\n                        <div className=\"accordion-body\" >\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\" style={myStyle}>\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\" style={myStyle}>\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"container\">\r\n            <button className=\"my-3 btn btn-primary\" id=\"darkModeButton\"  onClick={toggleStyle}>{btnText}</button>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        // lower.charAt(0)-->means character at 0 index \r\n        // lower.slice(1)-->it takes all characters but not takes first character \r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        // if props.alert is true than evaluates otherwise not evaluates \r\n        <div style={{height:\"10vh\",width:\"100%\"}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport './myApp.css';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setDarkMode]=useState('light'); //whether the dark mode is enabled or not\n  const[alert,setAlert]=useState(null)\n  const showAlert=(message,type)=>{\n       setAlert({\n         msg:message,\n         type:type\n       })\n       setTimeout(()=>{\n         setAlert(null)\n       },2000);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor=\"grey\"\n      document.body.style.color=\"white\"\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.title=\"textUtils-dark mode enabled\"\n    }\n    else{\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor=\"white\"\n      document.body.style.color=\"black\"\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title=\"textUtils-light mode enabled\"\n    }\n  }\n  return (\n    <Router>\n    <div className=\"container\">\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}></Alert>\n      <div>\n        <Routes>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter your opinion about website\" mode={mode}  showAlert={showAlert}/>}/>       \n          <Route exact path=\"/about\" element={<About mode={mode}/>}/>\n        </Routes> \n      </div>\n    </div> \n    </Router>\n);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}